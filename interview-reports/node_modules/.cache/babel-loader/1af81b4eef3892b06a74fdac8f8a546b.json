{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikola\\\\Desktop\\\\interview-reports\\\\interview-reports\\\\src\\\\components\\\\wiz\\\\WizReportForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { formatDateForHtmlInput } from \"../../utilities/helpers\";\nimport { Row, Col, Form, FormGroup, Button } from \"react-bootstrap\";\nimport styles from \"./WizReportForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val !== \"\"\n    };\n  } // if (action.type === \"INPUT_BLUR\") {\n  // not used here, but included for possible extension\n  // `state`: latest state snapshot, guaranteed to be up to date\n  // return { value: state.value, isValid: state.value !== \"\" };\n  // }\n  // default:\n\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nexport default function WizReportForm(props) {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [markInvalid, setMarkInvalid] = useState(false); // mark invalid input\n  //  only after first attempt to submit\n\n  const [dateState, dispatchDate] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: null // !!! with null as init val, not treated as invalid\n\n  });\n  const [phaseState, dispatchPhase] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [statusState, dispatchStatus] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [noteState, dispatchNote] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: null\n  });\n\n  const handleDateChange = e => {\n    dispatchDate({\n      type: \"USER_INPUT\",\n      val: e.target.value\n    });\n  };\n\n  const handlePhaseChange = e => {\n    dispatchPhase({\n      type: \"USER_INPUT\",\n      val: e.target.value\n    });\n  };\n\n  const handleStatusChange = e => {\n    dispatchStatus({\n      type: \"USER_INPUT\",\n      val: e.target.value\n    });\n  };\n\n  const handleNoteChange = e => {\n    dispatchNote({\n      type: \"USER_INPUT\",\n      val: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    const timerID = setTimeout(() => {\n      setFormIsValid(dateState.isValid && phaseState.isValid && statusState.isValid && noteState.isValid);\n    }, 100);\n    return () => {\n      clearTimeout(timerID);\n    };\n  }, [dateState.isValid, phaseState.isValid, statusState.isValid, noteState.isValid]); // within useEffect, can set state based on other states because those other\n  // states in the dependency array are guaranteed to be up to date\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!formIsValid) {\n      setMarkInvalid(true);\n      return;\n    }\n\n    props.onSubmit({\n      interviewDate: dateState.value,\n      phase: phaseState.value,\n      status: statusState.value,\n      note: noteState.value\n    });\n  };\n\n  const maxDate = formatDateForHtmlInput(new Date()); // console.log(\"Returned date format: \", maxDate);\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    className: \"m-3\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: true,\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: markInvalid && !dateState.isValid ? styles.invalid : \" \",\n          name: \"interviewDate\",\n          type: \"date\",\n          max: maxDate,\n          value: dateState.value,\n          onChange: handleDateChange // style={markInvalid && !dateState.isValid ? invalidStyle : null}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: true,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          className: markInvalid && !phaseState.isValid ? styles.invalid : \" \",\n          name: \"phase\",\n          value: phaseState.value,\n          onChange: handlePhaseChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select phase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CV\",\n            children: \"CV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"HR\",\n            children: \"HR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Tech\",\n            children: \"Tech\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Final\",\n            children: \"Final\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: true,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          className: markInvalid && !statusState.isValid ? styles.invalid : \" \",\n          name: \"status\",\n          value: statusState.value,\n          onChange: handleStatusChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Passed\",\n            children: \"Passed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Declined\",\n            children: \"Declined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          className: markInvalid && !noteState.isValid ? styles.invalid : \" \",\n          placeholder: \"Notes\",\n          name: \"note\",\n          value: noteState.value,\n          onChange: handleNoteChange,\n          style: {\n            height: \"150px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: markInvalid && !formIsValid ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.invalidMsg,\n          children: \"Please fill out all form fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \\xA0 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"m-3\",\n        onClick: props.onBackBtnClick,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"m-3\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WizReportForm, \"kaHIyxInpDQhWFlAtB43dL9JUgo=\");\n\n_c = WizReportForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WizReportForm\");","map":{"version":3,"sources":["C:/Users/Nikola/Desktop/interview-reports/interview-reports/src/components/wiz/WizReportForm.jsx"],"names":["React","useEffect","useReducer","useState","formatDateForHtmlInput","Row","Col","Form","FormGroup","Button","styles","inputReducer","state","action","type","value","val","isValid","WizReportForm","props","formIsValid","setFormIsValid","markInvalid","setMarkInvalid","dateState","dispatchDate","phaseState","dispatchPhase","statusState","dispatchStatus","noteState","dispatchNote","handleDateChange","e","target","handlePhaseChange","handleStatusChange","handleNoteChange","timerID","setTimeout","clearTimeout","handleSubmit","preventDefault","onSubmit","interviewDate","phase","status","note","maxDate","Date","invalid","height","invalidMsg","onBackBtnClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { formatDateForHtmlInput } from \"../../utilities/helpers\";\r\nimport { Row, Col, Form, FormGroup, Button } from \"react-bootstrap\";\r\nimport styles from \"./WizReportForm.module.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val !== \"\" };\r\n  }\r\n  // if (action.type === \"INPUT_BLUR\") {\r\n  // not used here, but included for possible extension\r\n  // `state`: latest state snapshot, guaranteed to be up to date\r\n  // return { value: state.value, isValid: state.value !== \"\" };\r\n  // }\r\n  // default:\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nexport default function WizReportForm(props) {\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [markInvalid, setMarkInvalid] = useState(false); // mark invalid input\r\n  //  only after first attempt to submit\r\n  const [dateState, dispatchDate] = useReducer(inputReducer, {\r\n    value: \"\",\r\n    isValid: null, // !!! with null as init val, not treated as invalid\r\n  });\r\n  const [phaseState, dispatchPhase] = useReducer(inputReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [statusState, dispatchStatus] = useReducer(inputReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [noteState, dispatchNote] = useReducer(inputReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const handleDateChange = (e) => {\r\n    dispatchDate({ type: \"USER_INPUT\", val: e.target.value });\r\n  };\r\n  const handlePhaseChange = (e) => {\r\n    dispatchPhase({ type: \"USER_INPUT\", val: e.target.value });\r\n  };\r\n  const handleStatusChange = (e) => {\r\n    dispatchStatus({ type: \"USER_INPUT\", val: e.target.value });\r\n  };\r\n  const handleNoteChange = (e) => {\r\n    dispatchNote({ type: \"USER_INPUT\", val: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timerID = setTimeout(() => {\r\n      setFormIsValid(\r\n        dateState.isValid &&\r\n          phaseState.isValid &&\r\n          statusState.isValid &&\r\n          noteState.isValid\r\n      );\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, [\r\n    dateState.isValid,\r\n    phaseState.isValid,\r\n    statusState.isValid,\r\n    noteState.isValid,\r\n  ]); // within useEffect, can set state based on other states because those other\r\n  // states in the dependency array are guaranteed to be up to date\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      setMarkInvalid(true);\r\n      return;\r\n    }\r\n    props.onSubmit({\r\n      interviewDate: dateState.value,\r\n      phase: phaseState.value,\r\n      status: statusState.value,\r\n      note: noteState.value,\r\n    });\r\n  };\r\n\r\n  const maxDate = formatDateForHtmlInput(new Date());\r\n  // console.log(\"Returned date format: \", maxDate);\r\n\r\n  return (\r\n    <FormGroup className=\"m-3\">\r\n      <Row className=\"g-3\">\r\n        <Col lg>\r\n          <Form.Control\r\n            className={markInvalid && !dateState.isValid ? styles.invalid : \" \"}\r\n            name=\"interviewDate\"\r\n            type=\"date\"\r\n            max={maxDate}\r\n            value={dateState.value}\r\n            onChange={handleDateChange}\r\n            // style={markInvalid && !dateState.isValid ? invalidStyle : null}\r\n          />\r\n        </Col>\r\n        <Col md>\r\n          <Form.Select\r\n            className={\r\n              markInvalid && !phaseState.isValid ? styles.invalid : \" \"\r\n            }\r\n            name=\"phase\"\r\n            value={phaseState.value}\r\n            onChange={handlePhaseChange}\r\n          >\r\n            <option value=\"\">Select phase</option>\r\n            <option value=\"CV\">CV</option>\r\n            <option value=\"HR\">HR</option>\r\n            <option value=\"Tech\">Tech</option>\r\n            <option value=\"Final\">Final</option>\r\n          </Form.Select>\r\n        </Col>\r\n        <Col md>\r\n          <Form.Select\r\n            className={\r\n              markInvalid && !statusState.isValid ? styles.invalid : \" \"\r\n            }\r\n            name=\"status\"\r\n            value={statusState.value}\r\n            onChange={handleStatusChange}\r\n          >\r\n            <option value=\"\">Select status</option>\r\n            <option value=\"Passed\">Passed</option>\r\n            <option value=\"Declined\">Declined</option>\r\n          </Form.Select>\r\n        </Col>\r\n\r\n        <Col sm={12}>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            className={markInvalid && !noteState.isValid ? styles.invalid : \" \"}\r\n            placeholder=\"Notes\"\r\n            name=\"note\"\r\n            value={noteState.value}\r\n            onChange={handleNoteChange}\r\n            style={{ height: \"150px\" }}\r\n          />\r\n        </Col>\r\n        <Col sm={12}>\r\n          {markInvalid && !formIsValid ? (\r\n            <p className={styles.invalidMsg}>Please fill out all form fields</p>\r\n          ) : (\r\n            <p> &nbsp; </p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Button variant=\"dark\" className=\"m-3\" onClick={props.onBackBtnClick}>\r\n          Back\r\n        </Button>\r\n        <Button\r\n          variant=\"dark\"\r\n          className=\"m-3\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </FormGroup>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}