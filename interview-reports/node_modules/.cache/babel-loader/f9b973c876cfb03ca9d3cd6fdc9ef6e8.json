{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikola\\\\Desktop\\\\interview-reports\\\\interview-reports\\\\src\\\\components\\\\CandidateList.jsx\";\nimport React, { Fragment } from \"react\";\nimport CandidateCard from \"./CandidateCard.jsx\";\nimport { includesIgnoreCase } from \"../utilities/helpers.js\";\nimport ErrorDisplay from \"./ErrorDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CandidateList = ({\n  candidates,\n  searchText,\n  adminpage\n}) => {\n  let searchResult;\n\n  if (searchText === \"\") {\n    searchResult = candidates;\n  } else {\n    searchResult = candidates.filter(c => {\n      return includesIgnoreCase(c.name, searchText);\n    });\n  }\n\n  if (adminpage) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: searchResult.map(item => /*#__PURE__*/_jsxDEV(CandidateCard, {\n        candidate: item,\n        adminpage: true\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return searchResult.length !== 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: searchResult.map(item => /*#__PURE__*/_jsxDEV(CandidateCard, {\n      candidate: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n    message: \"No result\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CandidateList;\nexport default CandidateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandidateList\");","map":{"version":3,"sources":["C:/Users/Nikola/Desktop/interview-reports/interview-reports/src/components/CandidateList.jsx"],"names":["React","Fragment","CandidateCard","includesIgnoreCase","ErrorDisplay","CandidateList","candidates","searchText","adminpage","searchResult","filter","c","name","map","item","id","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAD,KAA2C;AAC/D,MAAIC,YAAJ;;AACA,MAAIF,UAAU,KAAK,EAAnB,EAAuB;AACrBE,IAAAA,YAAY,GAAGH,UAAf;AACD,GAFD,MAEO;AACLG,IAAAA,YAAY,GAAGH,UAAU,CAACI,MAAX,CAAmBC,CAAD,IAAO;AACtC,aAAOR,kBAAkB,CAACQ,CAAC,CAACC,IAAH,EAASL,UAAT,CAAzB;AACD,KAFc,CAAf;AAGD;;AACD,MAAIC,SAAJ,EAAe;AACb,wBACE,QAAC,QAAD;AAAA,gBACGC,YAAY,CAACI,GAAb,CAAkBC,IAAD,iBAChB,QAAC,aAAD;AAA6B,QAAA,SAAS,EAAEA,IAAxC;AAA8C,QAAA,SAAS,EAAE;AAAzD,SAAoBA,IAAI,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,SAAON,YAAY,CAACO,MAAb,KAAwB,CAAxB,gBACL,QAAC,QAAD;AAAA,cACGP,YAAY,CAACI,GAAb,CAAkBC,IAAD,iBAChB,QAAC,aAAD;AAA6B,MAAA,SAAS,EAAEA;AAAxC,OAAoBA,IAAI,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADK,gBAOL,QAAC,YAAD;AAAc,IAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,UAPF;AASD,CA5BD;;KAAMV,a;AA8BN,eAAeA,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nimport CandidateCard from \"./CandidateCard.jsx\";\r\nimport { includesIgnoreCase } from \"../utilities/helpers.js\";\r\n\r\nimport ErrorDisplay from \"./ErrorDisplay\";\r\n\r\nconst CandidateList = ({ candidates, searchText, adminpage }) => {\r\n  let searchResult;\r\n  if (searchText === \"\") {\r\n    searchResult = candidates;\r\n  } else {\r\n    searchResult = candidates.filter((c) => {\r\n      return includesIgnoreCase(c.name, searchText);\r\n    });\r\n  }\r\n  if (adminpage) {\r\n    return (\r\n      <Fragment>\r\n        {searchResult.map((item) => (\r\n          <CandidateCard key={item.id} candidate={item} adminpage={true} />\r\n        ))}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return searchResult.length !== 0 ? (\r\n    <Fragment>\r\n      {searchResult.map((item) => (\r\n        <CandidateCard key={item.id} candidate={item} />\r\n      ))}\r\n    </Fragment>\r\n  ) : (\r\n    <ErrorDisplay message=\"No result\" />\r\n  );\r\n};\r\n\r\nexport default CandidateList;\r\n"]},"metadata":{},"sourceType":"module"}