{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikola\\\\Desktop\\\\interview-reports\\\\interview-reports\\\\src\\\\pages\\\\Candidates.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\"; // import { getCandidates } from \"../services/services\";\n\nimport CandidateCommunicator from \"../services/CandidateCommunicator\";\nimport CandidateList from \"../components/CandidateList\";\nimport ErrorDisplay from \"../components/ErrorDisplay\";\nimport SearchBar from \"../components/SearchBar\";\nimport { SESSION_EXPIRED } from \"../shared/constants\";\nimport styles from \"./Candidates.module.css\";\nimport LoaderRipple from \"../components/UI/LoaderRipple\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Candidates = props => {\n  _s();\n\n  const [candidates, setCandidates] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    CandidateCommunicator.getAll().then(data => {\n      setCandidates(data);\n    }).catch(error => {\n      console.log(error);\n      if (error.message === SESSION_EXPIRED) props.onSessionExpired();\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  const handleSearch = filterText => {\n    setSearchText(filterText);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoaderRipple, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (candidates.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        message: \"Sorry, failed to load data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.adminpage) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CandidateList, {\n        adminpage: true,\n        candidates: candidates,\n        searchText: searchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainContainer,\n      children: /*#__PURE__*/_jsxDEV(CandidateList, {\n        candidates: candidates,\n        searchText: searchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Candidates, \"S9eqb0QepqQtHzZ38jnqTIEaYYk=\");\n\n_c = Candidates;\nexport default Candidates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Candidates\");","map":{"version":3,"sources":["C:/Users/Nikola/Desktop/interview-reports/interview-reports/src/pages/Candidates.jsx"],"names":["React","Fragment","useState","useEffect","CandidateCommunicator","CandidateList","ErrorDisplay","SearchBar","SESSION_EXPIRED","styles","LoaderRipple","Candidates","props","candidates","setCandidates","searchText","setSearchText","loading","setLoading","error","setError","getAll","then","data","catch","console","log","message","onSessionExpired","finally","handleSearch","filterText","length","adminpage","mainContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD,C,CACA;;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,qBAAqB,CAACiB,MAAtB,GACGC,IADH,CACSC,IAAD,IAAU;AACdT,MAAAA,aAAa,CAACS,IAAD,CAAb;AACD,KAHH,EAIGC,KAJH,CAIUL,KAAD,IAAW;AAChBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,UAAIA,KAAK,CAACQ,OAAN,KAAkBnB,eAAtB,EAAuCI,KAAK,CAACgB,gBAAN;AACvCR,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACD,KARH,EASGE,OATH,CASW,MAAM;AACbX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMY,YAAY,GAAIC,UAAD,IAAgB;AACnCf,IAAAA,aAAa,CAACe,UAAD,CAAb;AACD,GAFD;;AAIA,MAAIZ,KAAJ,EAAW;AACT,wBAAO,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIF,OAAJ,EAAa;AACX,wBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIJ,UAAU,CAACmB,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,wBACE,QAAC,QAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIpB,KAAK,CAACqB,SAAV,EAAqB;AACnB,wBACE,QAAC,QAAD;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,UAAU,EAAEpB,UAFd;AAGE,QAAA,UAAU,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEe;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACyB,aAAvB;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,UAAU,EAAErB,UAA3B;AAAuC,QAAA,UAAU,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3DD;;GAAMJ,U;;KAAAA,U;AA6DN,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n// import { getCandidates } from \"../services/services\";\r\nimport CandidateCommunicator from \"../services/CandidateCommunicator\";\r\nimport CandidateList from \"../components/CandidateList\";\r\nimport ErrorDisplay from \"../components/ErrorDisplay\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport { SESSION_EXPIRED } from \"../shared/constants\";\r\nimport styles from \"./Candidates.module.css\";\r\nimport LoaderRipple from \"../components/UI/LoaderRipple\";\r\n\r\nconst Candidates = (props) => {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    CandidateCommunicator.getAll()\r\n      .then((data) => {\r\n        setCandidates(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (error.message === SESSION_EXPIRED) props.onSessionExpired();\r\n        setError(error.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleSearch = (filterText) => {\r\n    setSearchText(filterText);\r\n  };\r\n\r\n  if (error) {\r\n    return <ErrorDisplay message={error} />;\r\n  }\r\n  if (loading) {\r\n    return <LoaderRipple />;\r\n  }\r\n\r\n  if (candidates.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorDisplay message=\"Sorry, failed to load data.\" />\r\n      </Fragment>\r\n    );\r\n  }\r\n  if (props.adminpage) {\r\n    return (\r\n      <Fragment>\r\n        <CandidateList\r\n          adminpage={true}\r\n          candidates={candidates}\r\n          searchText={searchText}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchBar onSearch={handleSearch} />\r\n      <div className={styles.mainContainer}>\r\n        <CandidateList candidates={candidates} searchText={searchText} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Candidates;\r\n"]},"metadata":{},"sourceType":"module"}