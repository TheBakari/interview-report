{"ast":null,"code":"import * as service from \"./services.js\";\nimport Candidate from \"../entities/Candidate\";\nexport default class CandidateCommunicator {\n  static getAll() {\n    return service.getData(\"candidates\").then(json => {\n      // console.log(\"Results\", json);\n      // console.log((\"Candidates:\", json.map(c => new Candidate(c))));\n      return json.map(c => new Candidate(c));\n    });\n  }\n\n  static getById(id) {\n    return service.getData(\"candidates\", [{\n      key: \"id\",\n      value: id\n    }]).then(json => {\n      console.log(\"getSingleCandidate\", json);\n      const noResults = json.length === 0;\n      if (noResults) console.log(\"getSingleCandidate: No results!\");else console.assert(json.length === 1);\n      return noResults ? json : new Candidate(json[0]); // ???? TODO: Pitaj Nikolu\n      // da li je bolje da vrati null ili prazan niz (kao što vraća server kada nema rezultata)!\n      // AKO NEMA, VRATI PRAZAN OBJEKAT {} !!!!!!\n    });\n  }\n\n  static save(candidate) {\n    return service.saveData(\"candidates\", candidate.id ? \"PUT\" : \"POST\", candidate).then(response => new Candidate(response));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Nikola/Desktop/interview-reports/interview-reports/src/services/CandidateCommunicator.js"],"names":["service","Candidate","CandidateCommunicator","getAll","getData","then","json","map","c","getById","id","key","value","console","log","noResults","length","assert","save","candidate","saveData","response"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AAGA,eAAe,MAAMC,qBAAN,CAA4B;AAC5B,SAANC,MAAM,GAAG;AACd,WAAOH,OAAO,CAACI,OAAR,CAAgB,YAAhB,EACJC,IADI,CACCC,IAAI,IAAI;AACZ;AACA;AACA,aAAQA,IAAI,CAACC,GAAL,CAASC,CAAC,IAAI,IAAIP,SAAJ,CAAcO,CAAd,CAAd,CAAR;AACD,KALI,CAAP;AAMD;;AAEa,SAAPC,OAAO,CAACC,EAAD,EAAK;AACjB,WAAOV,OAAO,CAACI,OAAR,CAAgB,YAAhB,EAA8B,CAAC;AAAEO,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,KAAK,EAAEF;AAApB,KAAD,CAA9B,EACJL,IADI,CACCC,IAAI,IAAI;AACZO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,IAAlC;AACA,YAAMS,SAAS,GAAGT,IAAI,CAACU,MAAL,KAAgB,CAAlC;AACA,UAAID,SAAJ,EAAeF,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAAf,KACKD,OAAO,CAACI,MAAR,CAAeX,IAAI,CAACU,MAAL,KAAgB,CAA/B;AACL,aAAQD,SAAS,GAAGT,IAAH,GAAU,IAAIL,SAAJ,CAAcK,IAAI,CAAC,CAAD,CAAlB,CAA3B,CALY,CAKwC;AACpD;AACA;AACD,KATI,CAAP;AAUD;;AAEU,SAAJY,IAAI,CAACC,SAAD,EAAY;AACrB,WAAOnB,OAAO,CAACoB,QAAR,CAAiB,YAAjB,EAA+BD,SAAS,CAACT,EAAV,GAAe,KAAf,GAAuB,MAAtD,EAA8DS,SAA9D,EACJd,IADI,CACCgB,QAAQ,IAAI,IAAIpB,SAAJ,CAAcoB,QAAd,CADb,CAAP;AAED;;AA1BwC","sourcesContent":["import * as service from \"./services.js\";\r\n\r\nimport Candidate from \"../entities/Candidate\";\r\n\r\n\r\nexport default class CandidateCommunicator {\r\n  static getAll() {\r\n    return service.getData(\"candidates\")\r\n      .then(json => {\r\n        // console.log(\"Results\", json);\r\n        // console.log((\"Candidates:\", json.map(c => new Candidate(c))));\r\n        return (json.map(c => new Candidate(c)));\r\n      });\r\n  }\r\n\r\n  static getById(id) {\r\n    return service.getData(\"candidates\", [{ key: \"id\", value: id }])\r\n      .then(json => {\r\n        console.log(\"getSingleCandidate\", json);\r\n        const noResults = json.length === 0;\r\n        if (noResults) console.log(\"getSingleCandidate: No results!\");\r\n        else console.assert(json.length === 1);\r\n        return (noResults ? json : new Candidate(json[0])); // ???? TODO: Pitaj Nikolu\r\n        // da li je bolje da vrati null ili prazan niz (kao što vraća server kada nema rezultata)!\r\n        // AKO NEMA, VRATI PRAZAN OBJEKAT {} !!!!!!\r\n      });\r\n  }\r\n\r\n  static save(candidate) {\r\n    return service.saveData(\"candidates\", candidate.id ? \"PUT\" : \"POST\", candidate)\r\n      .then(response => new Candidate(response));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}